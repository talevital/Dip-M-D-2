# Generated by Django 5.2.6 on 2025-09-15 14:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Adresse email"
                    ),
                ),
                ("first_name", models.CharField(max_length=30, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=30, verbose_name="Nom")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("user", "Utilisateur"),
                            ("guest", "Invité"),
                        ],
                        default="user",
                        max_length=10,
                        verbose_name="Rôle",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Téléphone"
                    ),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Organisation",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Vérifié"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière connexion"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur",
                "verbose_name_plural": "Utilisateurs",
                "db_table": "auth_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("ip_address", models.GenericIPAddressField(verbose_name="Adresse IP")),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                ("success", models.BooleanField(verbose_name="Succès")),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Raison de l'échec",
                    ),
                ),
                (
                    "attempted_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Tentative le"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tentative de connexion",
                "verbose_name_plural": "Tentatives de connexion",
                "db_table": "login_attempts",
                "ordering": ["-attempted_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(blank=True, null=True, verbose_name="Biographie"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/",
                        verbose_name="Avatar",
                    ),
                ),
                (
                    "language",
                    models.CharField(default="fr", max_length=5, verbose_name="Langue"),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Africa/Abidjan",
                        max_length=50,
                        verbose_name="Fuseau horaire",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="XOF", max_length=3, verbose_name="Devise"
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        default="light", max_length=10, verbose_name="Thème"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications email"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Notifications push"
                    ),
                ),
                (
                    "weekly_reports",
                    models.BooleanField(
                        default=True, verbose_name="Rapports hebdomadaires"
                    ),
                ),
                (
                    "monthly_reports",
                    models.BooleanField(
                        default=False, verbose_name="Rapports mensuels"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil utilisateur",
                "verbose_name_plural": "Profils utilisateurs",
                "db_table": "user_profiles",
            },
        ),
    ]
